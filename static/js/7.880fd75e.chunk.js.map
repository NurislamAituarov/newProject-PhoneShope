{"version":3,"sources":["image/logo.png","components/header/Header.js"],"names":["Header","useState","linksSelected","setLinkSelected","navRef","useRef","burger","logoRef","burgerCheck","setBurgerCheck","useEffect","resize","window","innerWidth","current","style","display","addEventListener","removeEventListener","span","document","querySelectorAll","burgerTrigger","nav","burgerClick","transform","className","ref","src","logo","alt","width","id","map","item","backgroundColor","color","onClick"],"mappings":"8IAAe,G,MAAA,IAA0B,kC,cCiG1BA,UA7FA,WACb,IACA,EAAyCC,mBAAS,IAAlD,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAASC,mBACTC,EAASD,mBACTE,EAAUF,mBAChB,EAAsCJ,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAsDA,OApDAC,qBAAU,WAKR,SAASC,IACHC,OAAOC,WAAa,MACtBT,EAAOU,QAAQC,MAAMC,QAAU,OAC/BV,EAAOQ,QAAQC,MAAMC,QAAU,SAE7BJ,OAAOC,WAAa,MACtBT,EAAOU,QAAQC,MAAMC,QAAU,OAC/BV,EAAOQ,QAAQC,MAAMC,QAAU,QAKnC,OAhBIJ,OAAOC,WAAa,MACtBT,EAAOU,QAAQC,MAAMC,QAAU,OAC/BV,EAAOQ,QAAQC,MAAMC,QAAU,SAYjCJ,OAAOK,iBAAiB,SAAUN,GAE3B,WACLC,OAAOM,oBAAoB,SAAUP,MAEtC,IAEHD,qBAAU,WACR,IAAMS,EAAOC,SAASC,iBAAiB,SACjCC,EAAgBhB,EAAOQ,QACvBS,EAAMnB,EAAOU,QACnB,SAASU,IACHhB,IACFW,EAAK,GAAGJ,MAAMU,UAAY,iCAC1BN,EAAK,GAAGJ,MAAMU,UAAY,kCAC1BN,EAAK,GAAGJ,MAAMC,QAAU,OACxBO,EAAIR,MAAMC,QAAU,QACpBP,GAAe,IAEZD,IACHW,EAAK,GAAGJ,MAAMU,UAAY,6BAC1BN,EAAK,GAAGJ,MAAMU,UAAY,4BAC1BN,EAAK,GAAGJ,MAAMC,QAAU,QACxBO,EAAIR,MAAMC,QAAU,OACpBP,GAAe,IAInB,OADAa,EAAcL,iBAAiB,QAASO,GACjC,WACLF,EAAcJ,oBAAoB,QAASM,MAE5C,CAAChB,IAOF,mCACE,sBAAKkB,UAAU,cAAf,UACE,qBAAKC,IAAKpB,EAASqB,IAAKC,EAAMC,IAAI,OAAOC,MAAM,OAC/C,oDAEF,sBAAKJ,IAAKrB,EAAQoB,UAAU,SAA5B,UACE,sBAAMM,GAAG,SACT,sBAAMA,GAAG,SACT,sBAAMA,GAAG,YAEX,qBAAKL,IAAKvB,EAAV,SACE,6BAvEU,CAAC,OAAQ,WAAY,cAAe,YAwEnC6B,KAAI,SAACC,GACZ,OACE,oBACEnB,MACEb,IAAkBgC,EACd,CAAEC,gBAAiB,mBAAoBC,MAAO,SAC9C,KAENC,QAAS,WAxBrBlC,EAwBwC+B,IAN9B,SAQGA,GADIA","file":"static/js/7.880fd75e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8f0be3fb.png\";","import './Header.scss';\nimport logo from '../../image/logo.png';\nimport { useEffect, useRef, useState } from 'react';\n\nconst Header = () => {\n  const liArray = ['Menu', 'Contacts', 'Information', 'Register'];\n  const [linksSelected, setLinkSelected] = useState('');\n  const navRef = useRef();\n  const burger = useRef();\n  const logoRef = useRef();\n  const [burgerCheck, setBurgerCheck] = useState(true);\n\n  useEffect(() => {\n    if (window.innerWidth < 500) {\n      navRef.current.style.display = 'none';\n      burger.current.style.display = 'block';\n    }\n    function resize() {\n      if (window.innerWidth < 500) {\n        navRef.current.style.display = 'none';\n        burger.current.style.display = 'block';\n      }\n      if (window.innerWidth > 500) {\n        navRef.current.style.display = 'flex';\n        burger.current.style.display = 'none';\n      }\n    }\n    window.addEventListener('resize', resize);\n\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const span = document.querySelectorAll('#span');\n    const burgerTrigger = burger.current;\n    const nav = navRef.current;\n    function burgerClick() {\n      if (burgerCheck) {\n        span[0].style.transform = 'translateY(11px) rotate(45deg)';\n        span[2].style.transform = 'translateY(-12px) rotate(-45deg';\n        span[1].style.display = 'none';\n        nav.style.display = 'block';\n        setBurgerCheck(false);\n      }\n      if (!burgerCheck) {\n        span[0].style.transform = 'translateY(0) rotate(0deg)';\n        span[2].style.transform = 'translateY(0) rotate(0deg';\n        span[1].style.display = 'block';\n        nav.style.display = 'none';\n        setBurgerCheck(true);\n      }\n    }\n    burgerTrigger.addEventListener('click', burgerClick);\n    return () => {\n      burgerTrigger.removeEventListener('click', burgerClick);\n    };\n  }, [burgerCheck]);\n\n  function onClickLinks(link) {\n    setLinkSelected(link);\n  }\n\n  return (\n    <header>\n      <div className=\"header_logo\">\n        <img ref={logoRef} src={logo} alt=\"logo\" width=\"50\" />\n        <h2>Cell phone shop</h2>\n      </div>\n      <div ref={burger} className=\"burger\">\n        <span id=\"span\"></span>\n        <span id=\"span\"></span>\n        <span id=\"span\"></span>\n      </div>\n      <nav ref={navRef}>\n        <ul>\n          {liArray.map((item) => {\n            return (\n              <li\n                style={\n                  linksSelected === item\n                    ? { backgroundColor: 'rgb(0, 152, 223)', color: 'black' }\n                    : null\n                }\n                onClick={() => onClickLinks(item)}\n                key={item}>\n                {item}\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}